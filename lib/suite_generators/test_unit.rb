# Defines Trapeze::SuiteGenerators::TestUnit.

require File.expand_path("#{File.dirname __FILE__}/../suite_generators")
require File.expand_path("#{File.dirname __FILE__}/../name_extension")
require File.expand_path("#{File.dirname __FILE__}/../truncate_extension")

# Generates Ruby source files containing Test::Unit test cases.
class Trapeze::SuiteGenerators::TestUnit
  
  # The directory in which generated source files will be created.
  attr_reader :path
  
  def initialize(path)
    if ! File.directory?(path) && File.exist?(path)
      raise ArgumentError, 'path must be a directory'
    end
    @path = path
  end
  
  # Deletes the subdirectories and files in path and generates Ruby source files
  # containing a suite a test cases described by _cases_.
  def generate!(cases)
    if File.directory?(path)
      Dir.truncate path
    else
      Dir.mkdir path
    end
    
    generate_suite_file!
    
    cases.each do |kase|
      if kase.respond_to?(:class_or_module)
        File.open("#{path}/#{kase.class_or_module.name.gsub '::', '_'}_test.rb", 'a+') do |f|
          f.puts kase.class_or_module.name
        end
      else
        File.open("#{path}/_test.rb", 'a+') do |f|
          f.print <<-end_print
# This file was automatically generated by Trapeze, the safety-net generator for
# Ruby. Visit http://trapeze.rubyforge.org/ for more information.

require 'test/unit'

class Test_ < Test::Unit::TestCase
  
  def test_foo_returns_nil
    assert_nil foo
  end
  
end
          end_print
        end
      end
    end
    
    self
  end
  
private
  
  def generate_suite_file!
    File.open("#{path}/SUITE.rb", 'w') do |f|
      f.print <<-end_print
# This file was automatically generated by Trapeze, the safety-net generator for
# Ruby. Visit http://trapeze.rubyforge.org/ for more information.

Dir.glob("\#{File.dirname __FILE__}/../input/**/*.rb") do |source_file|
  require File.expand_path(source_file)
end

Dir.glob("\#{File.dirname __FILE__}/**/*_test.rb") do |test_file|
  require File.expand_path(test_file)
end
    end_print
    end
  end
  
end
